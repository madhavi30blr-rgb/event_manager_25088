-- init.sql

-- Drop tables if they exist to allow for a clean restart
DROP TABLE IF EXISTS registrations;
DROP TABLE IF EXISTS ticket_types;
DROP TABLE IF EXISTS events;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS attendees;

-- Create the User table
CREATE TABLE users (
    user_id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    organization VARCHAR(255)
);

-- Create the Events table
CREATE TABLE events (
    event_id SERIAL PRIMARY KEY,
    user_id INT NOT NULL,
    event_name VARCHAR(255) NOT NULL,
    event_date DATE NOT NULL,
    event_time TIME NOT NULL,
    location VARCHAR(255) NOT NULL,
    description TEXT,
    FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE
);

-- Create the Ticket_Types table
CREATE TABLE ticket_types (
    ticket_type_id SERIAL PRIMARY KEY,
    event_id INT NOT NULL,
    type_name VARCHAR(255) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    quantity_available INT NOT NULL,
    FOREIGN KEY (event_id) REFERENCES events (event_id) ON DELETE CASCADE
);

-- Create the Attendees table
CREATE TABLE attendees (
    attendee_id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE
);

-- Create the Registrations table (Junction table for attendee purchases)
CREATE TABLE registrations (
    registration_id SERIAL PRIMARY KEY,
    attendee_id INT NOT NULL,
    ticket_type_id INT NOT NULL,
    registration_date TIMESTAMP NOT NULL DEFAULT NOW(),
    purchase_quantity INT NOT NULL,
    FOREIGN KEY (attendee_id) REFERENCES attendees (attendee_id) ON DELETE CASCADE,
    FOREIGN KEY (ticket_type_id) REFERENCES ticket_types (ticket_type_id) ON DELETE CASCADE
);

-- Ensure that a ticket quantity does not go below zero
ALTER TABLE ticket_types
ADD CONSTRAINT positive_quantity_available CHECK (quantity_available >= 0);

-- Example data insertion for testing
INSERT INTO users (name, email, organization) VALUES
('John Doe', 'john.doe@example.com', 'Tech Solutions Inc.');

INSERT INTO events (user_id, event_name, event_date, event_time, location, description) VALUES
(1, 'PostgreSQL Masterclass', '2025-10-26', '10:00:00', 'Virtual Conference Room A', 'An in-depth session on advanced PostgreSQL features.');

INSERT INTO ticket_types (event_id, type_name, price, quantity_available) VALUES
(1, 'General Admission', 50.00, 100),
(1, 'VIP Pass', 150.00, 20);
